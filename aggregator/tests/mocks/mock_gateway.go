// Code generated by MockGen. DO NOT EDIT.
// Source: ./aggregator/gateway/gateway.go
//
// Generated by this command:
//
//	mockgen -source=./aggregator/gateway/gateway.go -destination=./aggregator/tests/mocks/mock_gateway.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	api "github.com/zoninnik89/commons/api"
	gomock "go.uber.org/mock/gomock"
)

// MockAdsGatewayInterface is a mock of AdsGatewayInterface interface.
type MockAdsGatewayInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAdsGatewayInterfaceMockRecorder
}

// MockAdsGatewayInterfaceMockRecorder is the mock recorder for MockAdsGatewayInterface.
type MockAdsGatewayInterfaceMockRecorder struct {
	mock *MockAdsGatewayInterface
}

// NewMockAdsGatewayInterface creates a new mock instance.
func NewMockAdsGatewayInterface(ctrl *gomock.Controller) *MockAdsGatewayInterface {
	mock := &MockAdsGatewayInterface{ctrl: ctrl}
	mock.recorder = &MockAdsGatewayInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdsGatewayInterface) EXPECT() *MockAdsGatewayInterfaceMockRecorder {
	return m.recorder
}

// CheckIfAdIsValid mocks base method.
func (m *MockAdsGatewayInterface) CheckIfAdIsValid(ctx context.Context, request *api.SendClickRequest) (*api.AdValidity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckIfAdIsValid", ctx, request)
	ret0, _ := ret[0].(*api.AdValidity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckIfAdIsValid indicates an expected call of CheckIfAdIsValid.
func (mr *MockAdsGatewayInterfaceMockRecorder) CheckIfAdIsValid(ctx, request any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckIfAdIsValid", reflect.TypeOf((*MockAdsGatewayInterface)(nil).CheckIfAdIsValid), ctx, request)
}
