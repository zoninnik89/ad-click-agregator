// Code generated by MockGen. DO NOT EDIT.
// Source: ./aggregator/storage/types.go
//
// Generated by this command:
//
//	mockgen -source=./aggregator/storage/types.go -destination=./aggregator/mocks/mock_store.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	types "github.com/zoninnik89/ad-click-aggregator/aggregator/types"
	gomock "go.uber.org/mock/gomock"
)

// MockStoreInterface is a mock of StoreInterface interface.
type MockStoreInterface struct {
	ctrl     *gomock.Controller
	recorder *MockStoreInterfaceMockRecorder
}

// MockStoreInterfaceMockRecorder is the mock recorder for MockStoreInterface.
type MockStoreInterfaceMockRecorder struct {
	mock *MockStoreInterface
}

// NewMockStoreInterface creates a new mock instance.
func NewMockStoreInterface(ctrl *gomock.Controller) *MockStoreInterface {
	mock := &MockStoreInterface{ctrl: ctrl}
	mock.recorder = &MockStoreInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStoreInterface) EXPECT() *MockStoreInterfaceMockRecorder {
	return m.recorder
}

// AddClick mocks base method.
func (m *MockStoreInterface) AddClick(adID string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddClick", adID)
}

// AddClick indicates an expected call of AddClick.
func (mr *MockStoreInterfaceMockRecorder) AddClick(adID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddClick", reflect.TypeOf((*MockStoreInterface)(nil).AddClick), adID)
}

// GetCount mocks base method.
func (m *MockStoreInterface) GetCount(adID string) *types.ClickCounter {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCount", adID)
	ret0, _ := ret[0].(*types.ClickCounter)
	return ret0
}

// GetCount indicates an expected call of GetCount.
func (mr *MockStoreInterfaceMockRecorder) GetCount(adID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCount", reflect.TypeOf((*MockStoreInterface)(nil).GetCount), adID)
}
